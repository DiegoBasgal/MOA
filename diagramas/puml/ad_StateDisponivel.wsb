@startuml StateDisponivel
!pragma useVerticalIf on
title StateDisponivel 

partition "innit()" {
    start
}

partition "step()" {
    start
    
    :Lê alarmes e Limites;
    if (Alarmes/limites que forçam indisp.) then (True)
        #lightblue:log warning;
        #lightgray:return StateIndisponivel(self.parent_ug);
        detach

    else if (Alarmes/limites que NÃO forçam indisp.) then (True)
        if (tentaivas_de_normalizacao > limite) then (True)
            #lightblue:log warning;
            #lightgray:return StateIndisponivel(self.parent_ug);
            detach
        
        else if (ts_auxiliar < limite) then (True)
            :tentaivas_de_normalizacao += 1;
            :ts_auxiliar = datetime.now();
            #lightblue:log info;
            :parent_ug.reconhece_reset_alarmes();
            #lightgray:return self;
            detach
        else (False)
            #lightgray:return self;
            detach
        endif

    else (False)

        if (parent_ug.etapa_alvo = UP) then (True)
            :pass;
            note right: Unidade parando

        else if (parent_ug.etapa_alvo = US) then (True)
            :pass;
            note right: Unidade Sincronizando

        else if (parent_ug.etapa_atual = UP) then (True)
            if (parent_ug.setpoint >=\nparent_ug.setpoint_minimo) then (True)
                #lightblue:log info;
                :parent_ug.partir();
                :parent_ug.enviar_setpoint();
            else (False)
                :parent_ug.parar();
            endif

        else if (parent_ug.etapa_atual = US) then (True)
            :tentaivas_de_normalizacao = 0;
            if (parent_ug.setpoint >=\nparent_ug.setpoint_minimo) then (True)
                :parent_ug.enviar_setpoint();
            else (False)
                #lightblue:log info;
                :parent_ug.parar();
            endif

        else (False)
            #lightgray:return StateIndisponivel(self.parent_ug);
            note right: Unidade em\nestado inconsistente
            detach

        endif      

        #lightgray:return self;
        detach
    endif
}

@enduml

